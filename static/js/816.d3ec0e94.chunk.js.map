{"version":3,"file":"static/js/816.d3ec0e94.chunk.js","mappings":"kUAmCA,EA/B2BA,EAAAA,YAAiB,WAWzCC,GAAQ,IAVTC,EAAQ,EAARA,SACAC,EAAS,EAATA,UACAC,EAAO,EAAPA,QACAC,EAAQ,EAARA,SACAC,EAAU,EAAVA,WACAC,EAAK,EAALA,MACAC,EAAI,EAAJA,KACAC,EAAO,EAAPA,QACAC,EAAU,EAAVA,WACGC,GAAK,YAEFC,GAAoBC,EAAAA,EAAAA,IAAmBX,EAAU,SACjDY,EAAUC,IAAWZ,EAAWS,EAAmBH,GAAW,GAAJ,OAAOG,EAAiB,YAAIH,GAAWD,GAAQ,GAAJ,OAAOI,EAAiB,YAAIJ,GAAQJ,GAAW,GAAJ,OAAOQ,EAAiB,YAAuB,kBAAZR,EAAuB,WAAH,OAAcA,GAAY,WAAaC,GAAY,GAAJ,OAAOO,EAAiB,aAAaN,GAAc,GAAJ,OAAOM,EAAiB,eAAeL,GAAS,GAAJ,OAAOK,EAAiB,WACzWI,GAAqBC,EAAAA,EAAAA,KAAK,SAAS,kBACpCN,GAAK,IACRR,UAAWW,EACXb,IAAKA,KAEP,GAAIS,EAAY,CACd,IAAIQ,EAAkB,GAAH,OAAMN,EAAiB,eAI1C,MAH0B,kBAAfF,IACTQ,EAAkB,GAAH,OAAMA,EAAe,YAAIR,KAEtBO,EAAAA,EAAAA,KAAK,MAAO,CAC9Bd,UAAWe,EACXC,SAAUH,GAEd,CACA,OAAOA,CACT,I,8BC3BII,GAAQC,EAAAA,EAAAA,OAAM,WAEhB,OADAC,QAAQC,IAAI,6BACL,yBAAK,yCACd,IAqDA,MA/CA,WAEE,IAAIC,GAAOC,EAAAA,EAAAA,KAAY,SAACC,GAAU,OAAOA,CAAM,IAC3CC,GAAWC,EAAAA,EAAAA,MACf,GAAwBC,EAAAA,EAAAA,UAAS,GAAE,eAA9BC,EAAK,KAAEC,EAAQ,KAIpB,OACE,4BACE,SAACX,EAAK,CAACU,MAAOA,KACd,mBAAQE,QAAS,WAAMD,EAASD,EAAM,EAAG,EAAE,SAAC,MAE3CN,EAAKS,KAAKC,KAAMV,EAAKS,KAAKE,IAAI,mCAC/B,mBAAQH,QAAS,WACfL,GAASS,EAAAA,EAAAA,MACX,EAAE,SAAC,kBACH,UAAC,EAAK,YACJ,4BACE,2BACE,wBAAI,OACJ,wBAAI,wBACJ,wBAAI,kBACJ,wBAAI,mCAGR,2BAEIZ,EAAKa,KAAKC,KAAI,SAASC,EAAGC,GACxB,OACE,2BACE,wBAAKhB,EAAKa,KAAKG,GAAGC,MAClB,wBAAKjB,EAAKa,KAAKG,GAAGN,QAClB,wBAAKV,EAAKa,KAAKG,GAAGV,SAClB,yBAAI,mBAAQE,QAAS,WACnBL,GAASe,EAAAA,EAAAA,IAAUlB,EAAKa,KAAKG,GAAGC,IAClC,EAAE,SAAC,UANID,EASb,WAMZ,C","sources":["../node_modules/react-bootstrap/esm/Table.js","components/Cart.js"],"sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Table = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  striped,\n  bordered,\n  borderless,\n  hover,\n  size,\n  variant,\n  responsive,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  const classes = classNames(className, decoratedBsPrefix, variant && `${decoratedBsPrefix}-${variant}`, size && `${decoratedBsPrefix}-${size}`, striped && `${decoratedBsPrefix}-${typeof striped === 'string' ? `striped-${striped}` : 'striped'}`, bordered && `${decoratedBsPrefix}-bordered`, borderless && `${decoratedBsPrefix}-borderless`, hover && `${decoratedBsPrefix}-hover`);\n  const table = /*#__PURE__*/_jsx(\"table\", {\n    ...props,\n    className: classes,\n    ref: ref\n  });\n  if (responsive) {\n    let responsiveClass = `${decoratedBsPrefix}-responsive`;\n    if (typeof responsive === 'string') {\n      responsiveClass = `${responsiveClass}-${responsive}`;\n    }\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: responsiveClass,\n      children: table\n    });\n  }\n  return table;\n});\nexport default Table;","import { Table } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { changeName, plusAge } from '../store/userSlice';\r\nimport { plusCount } from '../store';\r\nimport { memo, useMemo, useState } from 'react';\r\n\r\n\r\nlet Child = memo( function(){\r\n  console.log('재랜더링');\r\n  return <div>자식 컴포넌트</div>\r\n})\r\n\r\n// function 함수(){\r\n//   return \"반복문10억번\"\r\n// }\r\n\r\nfunction Cart(){\r\n\r\n  let list = useSelector((state)=>{ return state });\r\n  let dispatch = useDispatch();\r\n  let [count, setCount] = useState(0);\r\n\r\n  // let result = useMemo(()=>{return 함수()}, [state]); state가 변경될때만 실행\r\n\r\n  return(\r\n    <div>\r\n      <Child count={count}></Child>\r\n      <button onClick={()=>{ setCount(count+1) }}>+</button>\r\n\r\n      {list.user.name}{list.user.age}의 장바구니\r\n      <button onClick={()=>{\r\n        dispatch(plusAge());\r\n      }}>변경</button>\r\n      <Table>\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>상품명</th>\r\n            <th>수량</th>\r\n            <th>변경하기</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {\r\n            list.cart.map(function(a, i){\r\n              return(\r\n                <tr key={i}>\r\n                  <td>{list.cart[i].id}</td>\r\n                  <td>{list.cart[i].name}</td>\r\n                  <td>{list.cart[i].count}</td>\r\n                  <td><button onClick={()=>{\r\n                    dispatch(plusCount(list.cart[i].id));\r\n                  }}>+</button></td>\r\n                </tr>\r\n              )\r\n            })\r\n          }\r\n        </tbody>\r\n      </Table> \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Cart;"],"names":["React","ref","bsPrefix","className","striped","bordered","borderless","hover","size","variant","responsive","props","decoratedBsPrefix","useBootstrapPrefix","classes","classNames","table","_jsx","responsiveClass","children","Child","memo","console","log","list","useSelector","state","dispatch","useDispatch","useState","count","setCount","onClick","user","name","age","plusAge","cart","map","a","i","id","plusCount"],"sourceRoot":""}